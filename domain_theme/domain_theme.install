<?php

/**
 * @file
 * Install file for the Domain Theme module
 */

/**
 * Implements hook_schema().
 */
function domain_theme_schema() {
  $schema['domain_theme'] = array(
    'description' => 'Stores theme information for each domain.',
    'fields' => array(
      'domain_id' => array(
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'theme' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
        'default' => '',
      ),
      'settings' => array(
        'type' => 'blob',
        'not null' => FALSE,
      ),
      'status' => array(
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
        'default' => 0,
      ),
      'filepath' => array(
        'type' => 'varchar',
        'length' => '255',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array('domain_id', 'theme'),
    'foreign_keys' => array(
      'domain_id' => array('domain' => 'domain_id'),
    ),
  );
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function domain_theme_uninstall() {
  config_clear('domain_theme.settings', 'domain_theme_weight');
}

/**
 * Implements hook_dependencies().
 */
function domain_theme_update_dependencies() {
  $dependencies['domain_theme'][7300] = array(
    'domain' => 7303,
  );
  return $dependencies;
}

// TODO The old hook_update_N functions cannot be applied to Backdrop.

function domain_theme_update_7300($sandbox) { }

/**
 * Implements hook_update_last_removed().
 */
function domain_theme_update_last_removed() {
  return 7300;
}

/**
 * Migrate domain_theme variables to config.
 */
function domain_theme_update_1000() {
  $config = config('domain_theme.settings');
  $config->set('domain_theme_weight', update_variable_get('domain_theme_weight', '0'));
  $config->save();

  update_variable_del('domain_theme_weight');
}

/**
 * Implements hook_install().
 */
function domain_theme_install() {
  // Dynamically generated variable data was detected.
}
